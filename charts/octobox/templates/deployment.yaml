apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "octobox.fullname" . }}
  labels:
    {{- include "octobox.labels" . | nindent 4 }}
    role: server
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  minReadySeconds: {{ .Values.minReadySeconds }}
  selector:
    matchLabels:
      {{- include "octobox.selectorLabels" . | nindent 6 }}
      role: server
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.notificationSync.sidekiq.enabled }}
        checksum/config-sidekiq: {{ include (print $.Template.BasePath "/configmap-sidekiq.yaml") . | sha256sum }}
        {{- end }}
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "octobox.selectorLabels" . | nindent 8 }}
        role: server
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        image: {{ include "octobox.image" . | quote }}
        imagePullPolicy: {{ .Values.global.octobox.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 10 }}
        readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 10 }}
        resources:
            {{- toYaml .Values.resources | nindent 10 }}
        envFrom:
        - secretRef:
            name: {{ include "octobox.secretName" . }}
            optional: false
        - configMapRef:
            name: {{ include "octobox.configMapName" . }}
            optional: false
        env:
        {{- if .Values.extraEnvVars }}
        {{- .Values.extraEnvVars | toYaml | nindent 8 }}
        {{- end }}
        {{- include "octobox.postgresql.serviceBindingEnvs" . | nindent 8 }}
        {{- include "octobox.redis.serviceBindingEnvs" . | nindent 8 }}
        {{- if .Values.notificationSync.sidekiq.enabled }}
        - name: OCTOBOX_SIDEKIQ_SCHEDULE_ENABLED
          value: "true"
        - name: OCTOBOX_SIDEKIQ_SCHEDULE_PATH
          value: /etc/sidekiq/schedule.yaml
        {{- end }}
        volumeMounts:
        {{- if .Values.notificationSync.sidekiq.enabled }}
        - mountPath: /etc/sidekiq
          name: sidekiq
        {{- end }}
      volumes:
      {{- if .Values.notificationSync.sidekiq.enabled }}
      - name: sidekiq
        configMap:
          name: {{ include "octobox.fullname" . }}-sidekiq
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
