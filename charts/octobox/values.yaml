# Default values for octobox.

replicaCount: 1

image:
  repository: octoboxio/octobox
  pullPolicy: IfNotPresent
  ## tag or sha ref
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

minReadySeconds: 0

livenessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 60
  periodSeconds: 10

readinessProbe:
  httpGet:
    path: /
    port: http
  initialDelaySeconds: 5
  periodSeconds: 10

## don't create ConfigMap and use an existing one instead
# existingConfigMap: octobox

## don't create Secret and use an existing one instead
# existingSecret: octobox

## Octobox config
config:
  ## overwrite default postgres connection params
  ## will be defaulted to values from postgresql subchart
  database: {}
    # host:
    # port:
    # databaseName:
    # username:
    # password:

  ## overwrite default redis connection URL
  ## will be defaulted to values from redis subchart
  # redisURL: redis://user:password@redis-master.octobox

  github:
    ## setup octobox for GitHub Enterprise instead of github.com
    # domain: https://github.mycompany.com

    ## GitHub OAuth settings
    ## (register a new OAuth app under https://github.com/settings/applications/new)
    oauth:
      ## defaults to "notifications" or "notifications, read:org" if restricted access is enabled
      ## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#customizing-the-scopes-on-github
      # scope: "notifications, read:org"

      ## oauth client ID and client secret of your GitHub OAuth app
      clientID: ""
      clientSecret: ""

    ## GitHub App settings (optional/additional to oauth)
    ## (register a new GitHub app under https://github.com/settings/apps/new)
    ## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#running-octobox-as-a-github-app
    app: {}
      ## App ID of your GitHub App
      # appID: ""
      ## last path segment of public URL
      # appSlug: ""

      ## client ID and client secret of your GitHub App
      # clientID: ""
      # clientSecret: ""

      ## contents of private key to sign access token requests
      # privateKey: ""

      ## webhook secret for authenticating GitHub requests
      # webhookSecret: ""

    ## allow users to authenticate using personal access tokens
    ## https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#using-personal-access-tokens
    personalAccessTokensEnabled: false

    ## restrict access to certain GitHub org or team members
    ## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#limiting-access
    restrictedAccess:
      enabled: false

      ## get via `curl https://api.github.com/orgs/<org_name>`
      organizationID: ""

      ## organizationID needs to be set if restricting access to a team
      ## get via `curl https://api.github.com/orgs/<org_name>/teams' (authentication needed)
      teamID: ""

    ## configure IDs
    ## get via `curl https://api.github.com/users/<username>`
    adminIDs: []
    # - "12345678"

  ## download extra information about the subject of each notification
  ## (needed for thread view)
  ## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#downloading-subjects
  fetchSubject: true

  ## download comments on the subject of each notification
  ## (needed for thread view)
  includeComments: true

  ## if thread view is disabled, open links in same tab instead of new one
  ## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#open-links-in-the-same-tab
  openInSameTab: true

  ## allow users to set auto-refresh interval, lowest interval that can be set
  ## if set to 0, disable auto-refreshing notifications
  ## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#allowing-periodic-notification-refreshes
  minimumRefreshInterval: 5

  railsEnv: production

  ## configure octobox to serve static assests on its own instead of relying on some external webserver
  ## TODO: host static assets on nginx
  railsServeStaticAssets: true

  ## random 32 byte encryption key
  ## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#encryption-key
  octoboxAttributeEncryptionKey: ""

  ## random 32 byte key (required for production environment)
  secretKeyBase: ""

  ## enable live updates for currently viewed notifications
  ## (needs redis to be enabled)
  ## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#live-updates
  pushNotifications: false

  ## allowed origins for websocket connections for live updates
  websocketAllowedOrigins: []
  # - http://localhost:3000
  # - https://localhost:3000

  ## enable Google Analytics tracking
  googleAnalyticsID: ''

## extra env vars to add to octobox containers
extraEnvVars: []
# - name: name
#   value: value
# - name: other_name
#   valueFrom:
#     fieldRef:
#       fieldPath: fieldPath

## cronjob for server-side notification syncs
## see https://github.com/octobox/octobox/blob/master/docs/INSTALLATION.md#scheduling-server-side-notification-syncs
cronjob:
  enabled: true
  name: notifications

  schedule: "*/5 * * * *"
  concurrencyPolicy: Replace
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1

  restartPolicy: OnFailure
  command:
  - /usr/local/bin/rake
  args:
  - "tasks:sync_notifications"

  podAnnotations: {}

## TODO: add network policies

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
  # - host: octobox.local
  #   paths: []
  tls: []
  #  - secretName: octobox-tls
  #    hosts:
  #    - octobox.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  fullnameOverride: postgres

  global:
    postgresql:
      postgresqlDatabase: octobox

redis:
  fullnameOverride: redis
